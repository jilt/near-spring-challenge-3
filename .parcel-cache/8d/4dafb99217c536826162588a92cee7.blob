var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Token", ()=>Token
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _nearApiJs = require("near-api-js");
var _app = require("../state/app");
var _mobile = require("../utils/mobile");
var _near = require("../state/near");
var _s = $RefreshSig$();
const { utils: { format: { formatNearAmount  }  }  } = _nearApiJs;
const Token = ({ dispatch , account , token , token: { token_id , nft_contract_id , metadata , owner_id , conditions , bids  }  })=>{
    _s();
    console.log(token);
    const [offerPrice, setOfferPrice] = _react.useState('');
    const [offerToken, setOfferToken] = _react.useState('near');
    _react.useEffect(()=>{
        document.body.style.overflow = 'hidden';
        return ()=>document.body.style.overflow = 'scroll'
        ;
    }, []);
    const handleShare = async (e)=>{
        e.stopPropagation();
        e.preventDefault();
        const headers = new Headers({
            'max-age': '3600'
        });
        const path = `https://helper.nearapi.org/v1/contract/${nft_contract_id}/nft_token/`;
        const args = JSON.stringify({
            token_id
        });
        const actions = JSON.stringify({
            botMap: {
                'og:title': 'NFTs on NEAR',
                'og:description': 'Check out this NFT on NEAR!',
                'og:image': {
                    field: 'metadata.media'
                }
            },
            redirect: encodeURIComponent(`${window.location.origin}${window.location.pathname}?t=${token_id}`),
            encodeUrl: true
        });
        const url = path + args + '/' + actions;
        const response = await fetch(url, {
            headers
        }).then((res)=>res.json()
        );
        if (!response || !response.encodedUrl) {
            console.warn(response);
            return alert('Something went wrong trying to share this url, please try sharing from the address bar or use your browsers share feature');
        }
        const result = _mobile.share(response.encodedUrl);
        if (!result.mobile) dispatch(_app.snackAttack('Link Copied!'));
    };
    const { accountId  } = account;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "token",
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 58
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        onClick: ()=>history.pushState({
            }, '', window.location.pathname)
        ,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 59
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("h3", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 61
        },
        __self: undefined
    }, "Click to Close"), /*#__PURE__*/ _reactDefault.default.createElement("img", {
        src: metadata.media,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 62
        },
        __self: undefined
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "token-detail",
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 64
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 65
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: _near.explorerUrl + '/accounts/' + owner_id,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 65
        },
        __self: undefined
    }, owner_id)), /*#__PURE__*/ _reactDefault.default.createElement("br", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 66
        },
        __self: undefined
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 67
        },
        __self: undefined
    }, /*#__PURE__*/ _reactDefault.default.createElement("a", {
        href: "#",
        onClick: (e)=>handleShare(e)
        ,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 67
        },
        __self: undefined
    }, "SHARE NOW")), conditions?.near.length && /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("h4", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 72
        },
        __self: undefined
    }, "Sale Conditions"), Object.entries(conditions).map(([ft_token_id, price])=>/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "margin-bottom",
            key: ft_token_id,
            __source: {
                fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
                lineNumber: 74
            },
            __self: undefined
        }, price === '0' ? 'open' : formatNearAmount(price, 4), " - ", _near.token2symbol[ft_token_id])
    ), accountId.length > 0 && accountId !== owner_id && /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "number",
        placeholder: "Price",
        value: offerPrice,
        onChange: (e)=>setOfferPrice(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 80
        },
        __self: undefined
    }), _near.getTokenOptions(offerToken, setOfferToken, Object.keys(conditions)), /*#__PURE__*/ _reactDefault.default.createElement("button", {
        onClick: ()=>_near.handleOffer(account, token_id, offerToken, offerPrice)
        ,
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 84
        },
        __self: undefined
    }, "Offer"))), bids?.near && /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("h4", {
        __source: {
            fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
            lineNumber: 92
        },
        __self: undefined
    }, "Offers"), Object.entries(bids).map(([ft_token_id, { owner_id: bid_owner_id , price  }])=>/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "offers",
            key: ft_token_id,
            __source: {
                fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
                lineNumber: 94
            },
            __self: undefined
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            __source: {
                fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
                lineNumber: 95
            },
            __self: undefined
        }, price === '0' ? 'open' : formatNearAmount(price, 4), " - ", _near.token2symbol[ft_token_id], " by ", bid_owner_id), accountId === owner_id && /*#__PURE__*/ _reactDefault.default.createElement("button", {
            onClick: ()=>handleAcceptOffer(token_id, ft_token_id)
            ,
            __source: {
                fileName: "C:\\Users\\jeelt\\Documents\\GitHub\\marketplace\\NFT-Staking\\src\\components\\Token.js",
                lineNumber: 100
            },
            __self: undefined
        }, "Accept"))
    )))));
};
_s(Token, "MOYROypI1r/riTXAbD9c5eqnBWQ=");
_c = Token;
var _c;
$RefreshReg$(_c, "Token");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}